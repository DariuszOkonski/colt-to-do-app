{"version":3,"sources":["ToDo.jsx","NewToDoForm.jsx","ToDoList.jsx","App.jsx","index.jsx"],"names":["Todo","props","state","isEditing","task","handleRemove","bind","toggleForm","handleUpdate","handleChange","handleToggle","this","removeToDo","id","setState","evt","target","name","value","preventDefault","updateToDo","toggleToDo","className","onSubmit","type","onChange","completed","onClick","Component","NewToDoForm","handleSubmit","createToDo","uuidv4","htmlFor","placeholder","TodoList","todos","create","remove","update","toggleCompletion","NewTodo","filter","t","updatedTask","updatedTodos","map","todo","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAsFeA,G,wDAlFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,WAAW,EACXC,KAAM,EAAKH,MAAMG,MAGnB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,gBAXH,E,2DAejBK,KAAKV,MAAMW,WAAWD,KAAKV,MAAMY,M,mCAIjCF,KAAKG,SAAS,CACZX,WAAYQ,KAAKT,MAAMC,c,mCAIdY,GACXJ,KAAKG,SAAL,eACGC,EAAIC,OAAOC,KAAOF,EAAIC,OAAOE,U,mCAIrBH,GACXA,EAAII,iBACJR,KAAKV,MAAMmB,WAAWT,KAAKV,MAAMY,GAAIF,KAAKT,MAAME,MAEhDO,KAAKG,SAAS,CACZX,WAAW,M,mCAIFY,GACXJ,KAAKV,MAAMoB,WAAWV,KAAKV,MAAMY,M,+BAsCjC,OAjCIF,KAAKT,MAAMC,UAEX,yBAAKmB,UAAU,QACb,0BAAMA,UAAU,iBAAiBC,SAAUZ,KAAKH,cAC9C,2BACEgB,KAAK,OACLN,MAAOP,KAAKT,MAAME,KAClBa,KAAK,OACLQ,SAAUd,KAAKF,eAEjB,0CAMJ,yBAAKa,UAAU,QACb,wBAAIA,UAAWX,KAAKV,MAAMyB,UAAY,sBAAwB,YAAaC,QAAShB,KAAKD,cACtFC,KAAKV,MAAMG,MAEd,yBAAKkB,UAAU,gBACb,4BAAQK,QAAShB,KAAKJ,YACpB,uBAAGe,UAAU,uBAEf,4BAAQK,QAAShB,KAAKN,cACpB,uBAAGiB,UAAU,wB,GAvERM,c,QC2CJC,E,kDA1Cb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXE,KAAM,IAER,EAAKK,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAKwB,aAAe,EAAKA,aAAaxB,KAAlB,gBANH,E,yDASNS,GACXJ,KAAKG,SAAL,eACGC,EAAIC,OAAOC,KAAOF,EAAIC,OAAOE,U,mCAIrBH,GACXA,EAAII,iBACJR,KAAKV,MAAM8B,WAAX,eAA2BpB,KAAKT,MAAhC,CAAuCW,GAAImB,cAAUN,WAAW,KAEhEf,KAAKG,SAAS,CACZV,KAAM,O,+BAKR,OACE,0BAAMkB,UAAU,cAAcC,SAAUZ,KAAKmB,cAC3C,2BAAOG,QAAQ,QAAf,YACA,2BACET,KAAK,OACLX,GAAG,OACHI,KAAK,OACLiB,YAAY,WACZhB,MAAOP,KAAKT,MAAME,KAClBqB,SAAUd,KAAKF,eAEjB,iD,GArCkBmB,aC4EXO,E,kDA1Eb,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXkC,MAAO,IAET,EAAKC,OAAS,EAAKA,OAAO/B,KAAZ,gBACd,EAAKgC,OAAS,EAAKA,OAAOhC,KAAZ,gBACd,EAAKiC,OAAS,EAAKA,OAAOjC,KAAZ,gBACd,EAAKkC,iBAAmB,EAAKA,iBAAiBlC,KAAtB,gBARP,E,mDAWZmC,GACL9B,KAAKG,SAAS,CACZsB,MAAM,GAAD,mBAAMzB,KAAKT,MAAMkC,OAAjB,CAAwBK,Q,6BAI1B5B,GACLF,KAAKG,SAAS,CACZsB,MAAOzB,KAAKT,MAAMkC,MAAMM,QAAO,SAAAC,GAAC,OAAIA,EAAE9B,KAAOA,S,6BAI1CA,EAAI+B,GACT,IAAMC,EAAelC,KAAKT,MAAMkC,MAAMU,KAAI,SAAAC,GACxC,OAAIA,EAAKlC,KAAOA,EACP,eAAKkC,EAAZ,CAAkB3C,KAAMwC,IAEnBG,KAGTpC,KAAKG,SAAS,CACZsB,MAAOS,M,uCAIMhC,GACf,IAAMgC,EAAelC,KAAKT,MAAMkC,MAAMU,KAAI,SAAAC,GACxC,OAAIA,EAAKlC,KAAOA,EACP,eAAKkC,EAAZ,CAAkBrB,WAAYqB,EAAKrB,YAE9BqB,KAGTpC,KAAKG,SAAS,CACZsB,MAAOS,M,+BAID,IAAD,OACDT,EAAQzB,KAAKT,MAAMkC,MAAMU,KAAI,SAAAC,GACjC,OAAO,kBAAC,EAAD,CACLC,IAAKD,EAAKlC,GACVT,KAAM2C,EAAK3C,KACXS,GAAIkC,EAAKlC,GACTa,UAAWqB,EAAKrB,UAChBd,WAAY,EAAK0B,OACjBlB,WAAY,EAAKmB,OACjBlB,WAAY,EAAKmB,sBAIrB,OACE,yBAAKlB,UAAU,YACb,0CAAe,gEACf,4BACGc,GAEH,kBAAC,EAAD,CAAaL,WAAYpB,KAAK0B,c,GArEfT,aCORqB,MARf,WACE,OACE,yBAAK3B,UAAU,OACb,kBAAC,EAAD,QCDN4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.723663c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Todo.css\";\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n      task: this.props.task\r\n    }\r\n\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.toggleForm = this.toggleForm.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n\r\n  handleRemove() {\r\n    this.props.removeToDo(this.props.id);\r\n  }\r\n\r\n  toggleForm() {\r\n    this.setState({\r\n      isEditing: !this.state.isEditing\r\n    })\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    })\r\n  }\r\n\r\n  handleUpdate(evt) {\r\n    evt.preventDefault();\r\n    this.props.updateToDo(this.props.id, this.state.task);\r\n\r\n    this.setState({\r\n      isEditing: false,\r\n    });\r\n  }\r\n\r\n  handleToggle(evt) {\r\n    this.props.toggleToDo(this.props.id);\r\n  }\r\n\r\n  render() {\r\n    let result;\r\n    if (this.state.isEditing) {\r\n      result = (\r\n        <div className=\"Todo\">\r\n          <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.task}\r\n              name=\"task\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <button>Save</button>\r\n          </form>\r\n        </div>\r\n      )\r\n    } else {\r\n      result = (\r\n        <div className=\"Todo\">\r\n          <li className={this.props.completed ? 'Todo-task completed' : 'Todo-task'} onClick={this.handleToggle}>\r\n            {this.props.task}\r\n          </li>\r\n          <div className=\"Todo-buttons\">\r\n            <button onClick={this.toggleForm}>\r\n              <i className=\"fas fa-pencil-alt\"></i>\r\n            </button>\r\n            <button onClick={this.handleRemove}>\r\n              <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    };\r\n\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass NewToDoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.props.createToDo({ ...this.state, id: uuidv4(), completed: false });\r\n\r\n    this.setState({\r\n      task: \"\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"task\">New Todo</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"task\"\r\n          name=\"task\"\r\n          placeholder=\"New Todo\"\r\n          value={this.state.task}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button>Add Todo</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewToDoForm;","import React, { Component } from 'react';\r\nimport Todo from './ToDo';\r\nimport NewToDoForm from './NewToDoForm';\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: []\r\n    }\r\n    this.create = this.create.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.toggleCompletion = this.toggleCompletion.bind(this);\r\n  }\r\n\r\n  create(NewTodo) {\r\n    this.setState({\r\n      todos: [...this.state.todos, NewTodo]\r\n    })\r\n  }\r\n\r\n  remove(id) {\r\n    this.setState({\r\n      todos: this.state.todos.filter(t => t.id !== id)\r\n    });\r\n  }\r\n\r\n  update(id, updatedTask) {\r\n    const updatedTodos = this.state.todos.map(todo => {\r\n      if (todo.id === id) {\r\n        return { ...todo, task: updatedTask }\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    this.setState({\r\n      todos: updatedTodos\r\n    });\r\n  }\r\n\r\n  toggleCompletion(id) {\r\n    const updatedTodos = this.state.todos.map(todo => {\r\n      if (todo.id === id) {\r\n        return { ...todo, completed: !todo.completed }\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    this.setState({\r\n      todos: updatedTodos\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const todos = this.state.todos.map(todo => {\r\n      return <Todo\r\n        key={todo.id}\r\n        task={todo.task}\r\n        id={todo.id}\r\n        completed={todo.completed}\r\n        removeToDo={this.remove}\r\n        updateToDo={this.update}\r\n        toggleToDo={this.toggleCompletion}\r\n      />\r\n    })\r\n\r\n    return (\r\n      <div className=\"TodoList\">\r\n        <h1>Todo List! <span>A Simple React Todo List App.</span></h1>\r\n        <ul>\r\n          {todos}\r\n        </ul>\r\n        <NewToDoForm createToDo={this.create} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport TodoList from './ToDoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}